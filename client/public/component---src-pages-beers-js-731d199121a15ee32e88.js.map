{"version":3,"sources":["webpack:///./src/pages/beers.js"],"names":["BeerGridStyles","styled","div","SingleBeerStyles","BeersPage","data","title","beers","nodes","length","className","map","beer","rating","Math","round","average","console","log","key","id","src","image","alt","name","onError","e","target","style","visibility","price","repeat","reviews","query"],"mappings":"2FAAA,sIAQMA,EAAiBC,IAAOC,IAAV,4EAAGD,CAAH,qFAMdE,EAAmBF,IAAOC,IAAV,8EAAGD,CAAH,gMAgBP,SAASG,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAClC,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAK,UAAYD,EAAKE,MAAMC,MAAMC,OAA7B,gBACV,wBAAIC,UAAU,UAAd,WACWL,EAAKE,MAAMC,MAAMC,OAD5B,mCAGA,kBAACT,EAAD,KACGK,EAAKE,MAAMC,MAAMG,KAAI,SAACC,GACrB,IAAMC,EAASC,KAAKC,MAAMH,EAAKC,OAAOG,SAEtC,OADAC,QAAQC,IAAIN,GAEV,kBAACT,EAAD,CAAkBgB,IAAKP,EAAKQ,IAC1B,yBACEC,IAAKT,EAAKU,MACVC,IAAKX,EAAKY,KACVC,QAAS,SAACC,GAAD,OAAQA,EAAEC,OAAOC,MAAMC,WAAa,YAE/C,4BAAKjB,EAAKY,MACTZ,EAAKkB,MACN,uBAAGxB,MAAUO,EAAL,mBACL,IAAIkB,OAAOlB,GACX,IAAIkB,OAAO,EAAIlB,GAChB,kCAAQD,EAAKC,OAAOmB,QAApB,YAUT,IAAMC,EAAK","file":"component---src-pages-beers-js-731d199121a15ee32e88.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport SEO from '../components/SEO';\n\nconst defaultImgUrl =\n  'https://www.totalwine.com/media/sys_master/cmsmedia/hff/h0e/8979036078110.png';\n\nconst BeerGridStyles = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n`;\n\nconst SingleBeerStyles = styled.div`\n  border: 1px solid var(--gray);\n  padding: 2rem;\n  text-align: center;\n  img {\n    width: 100%;\n    height: 200px;\n    min-height: 200px;\n    object-fit: contain;\n    display: block;\n    display: grid;\n    align-items: center;\n    font-size: 10px;\n  }\n`;\n\nexport default function BeersPage({ data }) {\n  return (\n    <>\n      <SEO title={`Beers! ${data.beers.nodes.length} available!`} />\n      <h2 className=\"center\">\n        We have {data.beers.nodes.length} beers available. Dine-in Only!\n      </h2>\n      <BeerGridStyles>\n        {data.beers.nodes.map((beer) => {\n          const rating = Math.round(beer.rating.average);\n          console.log(beer);\n          return (\n            <SingleBeerStyles key={beer.id}>\n              <img\n                src={beer.image}\n                alt={beer.name}\n                onError={(e) => (e.target.style.visibility = 'hidden')}\n              />\n              <h3>{beer.name}</h3>\n              {beer.price}\n              <p title={`${rating} out of 5 stars`}>\n                {`★`.repeat(rating)}\n                {`☆`.repeat(5 - rating)}\n                <span>({beer.rating.reviews})</span>\n              </p>\n            </SingleBeerStyles>\n          );\n        })}\n      </BeerGridStyles>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    beers: allBeer {\n      nodes {\n        id\n        name\n        price\n        image\n        rating {\n          average\n          reviews\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}