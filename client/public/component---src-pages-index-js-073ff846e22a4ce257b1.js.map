{"version":3,"sources":["webpack:///./src/utils/useLatestData.js","webpack:///./src/styles/Grids.js","webpack:///./src/components/LoadingGrid.js","webpack:///./src/components/ItemGrid.js","webpack:///./src/pages/index.js"],"names":["gql","String","raw","DetailFragment","query","HomePageGridStyles","styled","div","ItemsGridStyles","ItemStyles","LoadingGrid","count","console","log","Array","from","keys","v","key","className","src","alt","width","height","ItemGrid","items","map","item","_id","name","image","asset","url","style","background","metadata","lqip","backgroundSize","CurrentlySlicing","slicemasters","length","HotSlices","hotSlices","HomePage","useState","setHotSlices","setSlicemasters","useEffect","fetch","process","method","headers","body","JSON","stringify","then","res","json","data","StoreSettings","slicemaster","catch","err","useLatestData"],"mappings":"gkBAGA,IAAMA,EAAMC,OAAOC,IAEbC,EAAiBH,EAAH,KAadI,EAAQJ,EAAH,IAKDG,EAGAA,G,gBCxBGE,EAAqBC,IAAOC,IAAV,+EAAGD,CAAH,4IAUlBE,EAAkBF,IAAOC,IAAV,4EAAGD,CAAH,0DAMfG,EAAaH,IAAOC,IAAV,uEAAGD,CAAH,ghBCXR,SAASI,EAAT,GAAiC,IAAVC,EAAS,EAATA,MAEpC,OADAC,QAAQC,IAAI,IAEV,kBAACL,EAAD,KACGM,MAAMC,KAAKD,MAAMH,GAAOK,QAAQ,SAACC,GAAD,OAC/B,kBAACR,EAAD,CAAYS,IAAKD,GACf,2BACE,0BAAME,UAAU,QAAhB,eAEF,yBACEC,IAZV,0HAaUD,UAAU,UACVE,IAAI,UACJC,MAAM,MACNC,OAAO,aClBJ,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,kBAACjB,EAAD,KACGiB,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAClB,EAAD,CAAYS,IAAKS,EAAKC,KACpB,2BACE,0BAAMT,UAAU,QAAQQ,EAAKE,OAE/B,yBACEP,MAAM,MACNC,OAAO,MACPH,IAAQO,EAAKG,MAAMC,MAAMC,IAAtB,wBACHX,IAAKM,EAAKE,KACVI,MAAO,CACLC,WAAW,OAAQP,EAAKG,MAAMC,MAAMI,SAASC,KAAnC,IACVC,eAAgB,gBCZ9B,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAC1B,OACE,6BACE,wBAAIpB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,oBAEF,mEACEoB,GAAgB,kBAAC7B,EAAD,CAAaC,MAAO,IACrC4B,KAAiBA,WAAcC,SAC9B,4DAEDD,aAAA,EAAAA,EAAcC,SAAU,kBAAChB,EAAD,CAAUC,MAAOc,KAKhD,SAASE,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACnB,OACE,6BACE,wBAAIvB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,eAEF,0DACEuB,GAAa,kBAAChC,EAAD,CAAaC,MAAO,IAClC+B,KAAcA,WAAWF,SAAU,mDACnCE,aAAA,EAAAA,EAAWF,SAAU,kBAAChB,EAAD,CAAUC,MAAOiB,KAK9B,SAASC,IAAY,IAAD,EJJpB,WAA0B,IAAD,EACJC,qBAA3BF,EAD+B,KACpBG,EADoB,OAEED,qBAAjCL,EAF+B,KAEjBO,EAFiB,KAsBtC,OAlBAC,qBAAU,WACRC,MAAMC,+DAA+B,CACnCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBlD,YAGDmD,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLX,EAAaW,EAAIE,KAAKC,cAAcjB,WACpCI,EAAgBU,EAAIE,KAAKC,cAAcC,gBAExCC,OAAM,SAACC,GAAD,OAASlD,QAAQC,IAAI,SAAUiD,QACvC,IAEI,CACLpB,YACAH,gBInBkCwB,GAA5BxB,EADyB,EACzBA,aAAcG,EADW,EACXA,UAEtB,OACE,yBAAKvB,UAAU,UACb,wDACA,0DACA,kBAACd,EAAD,KACE,kBAACiC,EAAD,CAAkBC,aAAcA,IAChC,kBAACE,EAAD,CAAWC,UAAWA","file":"component---src-pages-index-js-073ff846e22a4ce257b1.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n// Allow syntax highlighting in vs code for graphql strings\nconst gql = String.raw;\n\nconst DetailFragment = gql`\n  name\n  _id\n  image {\n    asset {\n      url\n      metadata {\n        lqip\n      }\n    }\n  }\n`;\n\nconst query = gql`\n  query {\n    StoreSettings(id: \"downtown\") {\n      name\n      slicemaster {\n        ${DetailFragment}\n      }\n      hotSlices {\n        ${DetailFragment}\n      }\n    }\n  }\n`;\n\nexport default function useLatestData() {\n  const [hotSlices, setHotSlices] = useState();\n  const [slicemasters, setSlicemasters] = useState();\n\n  useEffect(function () {\n    fetch(process.env.GATSBY_SANITY_API, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setHotSlices(res.data.StoreSettings.hotSlices);\n        setSlicemasters(res.data.StoreSettings.slicemaster);\n      })\n      .catch((err) => console.log('error:', err));\n  }, []);\n\n  return {\n    hotSlices,\n    slicemasters,\n  };\n}\n","import styled from 'styled-components';\n\nexport const HomePageGridStyles = styled.div`\n  display: grid;\n  gap: 2rem;\n  --columns: 2;\n  grid-template-columns: repeat(var(--columns), minmax(auto, 1fr));\n  @media (max-width: 800px) {\n    --columns: 1;\n  }\n`;\n\nexport const ItemsGridStyles = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const ItemStyles = styled.div`\n  text-align: center;\n  position: relative;\n  img {\n    height: auto;\n    font-size: 0;\n  }\n  p {\n    top: 0;\n    transform: rotate(-2deg) translateY(-10px);\n    position: absolute;\n    width: 100%;\n    left: 0;\n    margin: 0;\n    font-size: 2rem;\n    font-size: clamp(12px, 5vw, 20px);\n  }\n  .mark {\n    display: inline;\n  }\n\n  @keyframes shine {\n    from {\n      background-position: 200%;\n    }\n    to {\n      background-position: -40px;\n    }\n  }\n\n  img.loading {\n    --shine: white;\n    --background: var(--gray);\n    background-image: linear-gradient(\n      90deg,\n      var(--background) 0px,\n      var(--shine) 40px,\n      var(--background) 80px\n    );\n    background-size: 500px;\n    animation: shine 1s infinite linear;\n  }\n`;\n","import React from 'react';\nimport { ItemsGridStyles, ItemStyles } from '../styles/Grids';\n\n// Blank img - generate from png-pixel.com\nconst loadingSVG =\n  'data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAECAQAAADsOj3LAAAADklEQVR42mNkgANGQkwAAJoABWH6GPAAAAAASUVORK5CYII=';\n\nexport default function LoadingGrid({ count }) {\n  console.log('');\n  return (\n    <ItemsGridStyles>\n      {Array.from(Array(count).keys(), (v) => (\n        <ItemStyles key={v}>\n          <p>\n            <span className=\"mark\">Loading...</span>\n          </p>\n          <img\n            src={loadingSVG}\n            className=\"loading\"\n            alt=\"Loading\"\n            width=\"500\"\n            height=\"400\"\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGridStyles>\n  );\n}\n","import React from 'react';\nimport { ItemsGridStyles, ItemStyles } from '../styles/Grids';\n\nexport default function ItemGrid({ items }) {\n  return (\n    <ItemsGridStyles>\n      {items.map((item) => (\n        <ItemStyles key={item._id}>\n          <p>\n            <span className=\"mark\">{item.name}</span>\n          </p>\n          <img\n            width=\"500\"\n            height=\"400\"\n            src={`${item.image.asset.url}?w=500&h=400&fit=crop`}\n            alt={item.name}\n            style={{\n              background: `url(${item.image.asset.metadata.lqip})`,\n              backgroundSize: 'cover',\n            }}\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGridStyles>\n  );\n}\n","import React from 'react';\nimport useLatestData from '../utils/useLatestData';\nimport { HomePageGridStyles, ItemsGridStyles } from '../styles/Grids';\nimport LoadingGrid from '../components/LoadingGrid';\nimport ItemGrid from '../components/ItemGrid';\n\nfunction CurrentlySlicing({ slicemasters }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Slicemasters On</span>\n      </h2>\n      <p>Standing by, ready to slice you up!</p>\n      {!slicemasters && <LoadingGrid count={4} />}\n      {slicemasters && !slicemasters?.length && (\n        <p>No one is working right now!</p>\n      )}\n      {slicemasters?.length && <ItemGrid items={slicemasters} />}\n    </div>\n  );\n}\n\nfunction HotSlices({ hotSlices }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Hot Slices</span>\n      </h2>\n      <p>Come on by, buy per slice!</p>\n      {!hotSlices && <LoadingGrid count={4} />}\n      {hotSlices && !hotSlices?.length && <p>Nothin' in the case</p>}\n      {hotSlices?.length && <ItemGrid items={hotSlices} />}\n    </div>\n  );\n}\n\nexport default function HomePage() {\n  const { slicemasters, hotSlices } = useLatestData();\n\n  return (\n    <div className=\"center\">\n      <h1>The Best Pizza Downtown!</h1>\n      <p>Open 11am to 11pm every day</p>\n      <HomePageGridStyles>\n        <CurrentlySlicing slicemasters={slicemasters} />\n        <HotSlices hotSlices={hotSlices} />\n      </HomePageGridStyles>\n    </div>\n  );\n}\n"],"sourceRoot":""}